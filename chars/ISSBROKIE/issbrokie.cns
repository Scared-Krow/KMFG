[Data]
life = 750
attack = 100
defence = 100
liedown.time = 20
sparkno = 2
guard.sparkno = 40
KO.echo = 0
IntPersistIndex = 60
FloatPersistIndex = 40
power = 1000

[Size]
xscale = 1.3     
yscale = 1.3  
ground.back = 5 
ground.front = 25    
air.back = 20     
air.front = 5  
height = 40          
attack.dist = 160    
proj.attack.dist = 90 
proj.doscale = 0     
head.pos = -5, -90   
mid.pos = -5, -60    
shadowoffset = 0     
draw.offset = 0,0

[Velocity]
walk.fwd  = 1.666
walk.back = -1.5    
run.fwd  = 4.6, 0    
run.back = -4.5,-3.8 
jump.neu = 0,-8 
jump.back = -2.55    
jump.fwd = 2.5       
runjump.back = -2.55,-8.1 
runjump.fwd = 3,-8.1      
airjump.neu = 0,-7      
airjump.back = -2.55      
airjump.fwd = 2.5         
air.gethit.groundrecover = -.15,-3.5  
air.gethit.airrecover.mul = .5,.2     
air.gethit.airrecover.add = 0,-4.5    
air.gethit.airrecover.back = -1       
air.gethit.airrecover.fwd = 0         
air.gethit.airrecover.up = -2         
air.gethit.airrecover.down = 1.5      

[Movement]
airjump.num = 0      
airjump.height = 35   
yaccel = .45        
stand.friction = .85  
crouch.friction = .82 
stand.friction.threshold = 2          
crouch.friction.threshold = .05      
air.gethit.groundlevel = 25           
air.gethit.groundrecover.ground.threshold = -20 
air.gethit.groundrecover.groundlevel = 10   
air.gethit.airrecover.threshold = -1  
air.gethit.airrecover.yaccel = .35    
air.gethit.trip.groundlevel = 15      
down.bounce.offset = 0, 20            
down.bounce.yaccel = .333           
down.bounce.groundlevel = 12         
down.friction.threshold = .05         

[Quotes]
victory1 = "You must defeat Tu Shou to stand a chance."
victory2 = "You need a lot of training. Come back in ten years."
victory3 = "You look familiar. Did I see you on TV?"
victory4 = "Your moves are too predictable. You want to learn Kung Fu Palm? It's not for novices."
victory5 = "That was a good workout."
victory6 = "I want to challenge more skilled fighters."
victory7 = "What do you mean my girlfriend is in another temple?"

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).


 
; Forward Dash
[Statedef 100]
type = S
movetype = I
physics = S
ctrl = 0
anim = 100

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nowalk

[State 0, VelAdd]
type = VelAdd
trigger1 = animelem = 1
x = 2
[State 0, VelAdd]
type = VelAdd
trigger1 = animelem = 2
x = 6

[State 0, VelSet]
type = VelSet
trigger1 = time > 16
x = -2.4

[State 0, CtrlSet]
type = CtrlSet
trigger1 = time = 5
value = 1

[State 0, ChangeState]
type = ChangeState
triggerall = command != "holdfwd" && command != "holdc"
trigger1 = command = "holdback" && time >= 16
trigger2 = time >= 54
value = 101
ctrl = 1

;---------------------------------------------------------------------------
; Back Dash
[Statedef 105]
type = S
movetype = I
physics = S
ctrl = 0
anim = 105

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nowalk


[State 0, VelAdd]
type = VelSet
trigger1 = animelem = 1
x = -6

[State 0, VelAdd]
type = VelSet
trigger1 = animelem = 4
x = 10

[State 0, CtrlSet]
type = CtrlSet
trigger1 = time = 12
value = 1

[State 0, ChangeState]
type = ChangeState
trigger1 = animtime = 0
trigger2 = command = "holdback" && time >= 12
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Forward Dash Walk
[Statedef 101]
type = S
movetype = I
physics = S
ctrl = 1
anim = 101

[State 0, ChangeState]
type = ChangeState
trigger1 = animtime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; Forward Air Dash
[Statedef 160]
type = A
movetype = I
physics = N
ctrl = 0
anim = 160
velset = vel x*.25,0

[State 0, VelSet]
type = VelSet
trigger1 = time = 8
x = 5

[State 0, StateTypeSet]
type = StateTypeSet
trigger1 = time = 20
statetype = A       ;S,A,C,L
movetype = I        ;I,A,H
physics = A         ;A,C,S,N

[State 0, CtrlSet]
type = CtrlSet
trigger1 = time = 15
value = 1
;---------------------------------------------------------------------------
; Back Air Dash
[Statedef 161]
type = A
movetype = I
physics = N
ctrl = 0
anim = 161
velset = vel x*.25,0

[State 0, VelSet]
type = VelSet
trigger1 = time = 8
x = -5

[State 0, StateTypeSet]
type = StateTypeSet
trigger1 = time = 20
statetype = A       ;S,A,C,L
movetype = I        ;I,A,H
physics = A         ;A,C,S,N

[State 0, CtrlSet]
type = CtrlSet
trigger1 = time = 15
value = 1
;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1 - Bow
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 191]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0

; You can delete the following two controllers if you're building your own
; character using KFM. These are the wood pieces that KFM kicks.
[State 191, Wood 1]
type = Explod
trigger1 = RoundState != 0
persistent = 0
anim = 191
postype = p1
pos = 260, -90
velocity = -4.2, -7
accel = 0, .32
removetime = 48

[State 191, Wood 2]
type = Explod
trigger1 = AnimElemTime(7) = 1
anim = 192
postype = p1
pos = 60, -70
velocity = 2, -4
accel = 0, .32
removetime = 35

; You can delete the following two controllers if you're building your own
; character using KFM. These play back the sounds of the wood block being
; broken.
[State 191, Snd 1]
type = PlaySnd
trigger1 = AnimElem = 7
value = F5,2
volume = -40

[State 191, Snd 2]
type = PlaySnd
trigger1 = AnimElemTime(7) = 3
value = F5,3
volume = -80
;---------------------------------------------------------------------------
; GGs Go Next
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2

[State 0, SuperPause]
type = SuperPause
trigger1 = time = 0
time = 47
anim = -1
;sound = 20,0
;pos = 0,-50
movetime = 47
darken = 1
p2defmul = 1
unhittable = 1

[State 0, Zoom]
type = zoom
trigger1= anim = 195
scale = 1.25
lag = .25
stagebound = 1
camerabound = 1
pos = pos x,-20
ignorehitpause=1

[State 195, 2]
type = lifeSet
trigger1 = AnimTime = 0
value = 0

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------
[Statedef -2]

;---------REDUCE MECHANIC
[State -2, Reduce]
type = mapset
trigger1 = enemy,movehit=1
value = 0
map = "Reduce"
[State -2, Reduce]
type = mapset
trigger1 = enemy,movehit=1
value = 0
map = "ReduceLockout"

[State -2, Reduce Set]
type = mapset
triggerall = Map(ReduceLockout)=0
trigger1 = movetype = H && command = "c"
value = 5
map = "Reduce"

[State -2, Reduce Set]
type = mapset
trigger1 = movetype = H && command = "c"
value = 12
map = "ReduceLockout"

[State -2, Reduce]
type = mapadd
trigger1 = Map(Reduce)>0
value = -1
map = "Reduce"
[State -2, Reduce]
type = mapadd
trigger1 = Map(ReduceLockout)>0
value = -1
map = "ReduceLockout"

[State 0, DefenceMulSet]
type = DefenceMulSet
trigger1 = Map(Reduce)>0
value = .8
ignorehitpause = 1
[State 0, DefenceMulSet]
type = DefenceMulSet
trigger1 = Map(Reduce)=0
value = 1
ignorehitpause = 1

;-------COUNTER HITS

[State 0, Zoom]
type = zoom
triggerall = enemy,stateno != 666999 && enemy,prevstateno != 666999
triggerall = movetype != H
triggerall = stateno != 200 && stateno != 400
trigger1= Movecountered 
scale = 1.25
lag = .25
stagebound = 1
camerabound = 1
pos = pos x,-20
ignorehitpause=1
[State 0, EnvShake]
type = EnvShake
triggerall = stateno != 200 && stateno != 400
trigger1= Movecountered && time = 0
time = 10
freq = 60
ampl = -4
phase = 90

[State -2, Low Map Reset]
type = mapset
trigger1 = enemy,movetype != A
value = 0
map = "CounterHit"
[State -2, Low Map Reset]
type = mapset
trigger1 = enemy,movetype = A
value = 1
map = "CounterHit"


;DAMAGE SCALING

[State -2, Hit Count Reset(Damage Scaling)]
type = VarSet
trigger1 = NumEnemy && fvar(10)
trigger1 = (EnemyNear, MoveType != H) && (EnemyNear, StateNo != 5300)
trigger2 = enemy,stateno = [120,155]
fvar(10) = 0
ignoreHitPause = 1

[State -2, Damage Dampener]
type = VarSet
trigger1 = 1
fvar(10) = ifElse(fvar(11) < 1, 10, ifElse(fvar(11) >= 10, 1, 10 - fvar(11))) / 10.0
ignoreHitPause = 1

[State -2, Damage Dampener Limit]
type = VarSet
trigger1 = fvar(10) < 0 
fvar(10) = 0 
ignoreHitPause = 1 

[State -2, Damage Dampener Limit]
type = VarSet
trigger1 = enemy, movetype != H
fvar(11) = 0
ignoreHitPause = 1

;HITSTUN SCALING

[State -2, Hit Count Reset(Hitstun Scaling)]
type = VarSet
trigger1 = NumEnemy && fvar(15)
trigger1 = (EnemyNear, MoveType != H) && (EnemyNear, StateNo != 5300)
trigger2 = enemy,stateno = [120,155]
fvar(15) = 0
ignoreHitPause = 1

[State -2, Hitstun Dampener]
type = VarSet
trigger1 = 1
fvar(16) = ifElse(fvar(15) < 3, 15, ifElse(fvar(15) >= 15, 1, 15 - fvar(15))) / 20.0
ignoreHitPause = 1

[State -2, Hitstun Dampener Limit]
type = VarSet
trigger1 = fvar(16) < 0
fvar(16) = 0
ignoreHitPause = 1
;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------
[Statedef -3]


;================================================================
;Generic Limiters
;================================================================

[State -2, Move Limit Reset]
type = mapset
trigger1 = enemy,movetype != H
value = 0
map = "GroundBounce"
[State -2, Move Limit Reset]
type = mapset
trigger1 = enemy,movetype != H
value = 0
map = "WallBounce"
[State -2, Move Limit Reset]
type = mapset
trigger1 = enemy,movetype != H
value = 0
map = "Tumble"

;This controller plays a sound everytime KFM lands from a jump, or
;from his back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
