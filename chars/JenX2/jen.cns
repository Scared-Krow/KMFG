[Data]
life = 1000
attack = 100
defence = 100
liedown.time = 15
sparkno = 2
guard.sparkno = 40
KO.echo = 0
IntPersistIndex = 60
FloatPersistIndex = 40
power = 1000
fall.defence_up = 0

[Size]
xscale = 1.3   
yscale = 1.3  
ground.back = 12 
ground.front = 16    
air.back = 12     
air.front = 18
height = 45
attack.dist = 160    
proj.attack.dist = 90 
proj.doscale = 0     
head.pos = -5, -90   
mid.pos = -5, -60    
shadowoffset = 0     
draw.offset = 0,0

[Velocity]
walk.fwd  = 1.8
walk.back = -1.6    
run.fwd  = 4.6, 0    
run.back = -4.5,-3.8 
jump.neu = 0,-8.5
jump.back = -2.55    
jump.fwd = 2.5       
runjump.back = -2.55,-8.1 
runjump.fwd = 4,-8.1      
airjump.neu = 0,-5      
airjump.back = -2.55      
airjump.fwd = 2.5         
air.gethit.groundrecover = -.15,-3.5  
air.gethit.airrecover.mul = .5,.2     
air.gethit.airrecover.add = 0,-4.5    
air.gethit.airrecover.back = -1       
air.gethit.airrecover.fwd = 0         
air.gethit.airrecover.up = -2         
air.gethit.airrecover.down = 1.5      

[Movement]
airjump.num = 1      
airjump.height = 100  
yaccel = .45        
stand.friction = .875
crouch.friction = .85
stand.friction.threshold = 2          
crouch.friction.threshold = .05      
air.gethit.groundlevel = 0           
air.gethit.groundrecover.ground.threshold = 0 
air.gethit.groundrecover.groundlevel = 20
air.gethit.airrecover.threshold = -1  
air.gethit.airrecover.yaccel = .35    
air.gethit.trip.groundlevel = 15      
down.bounce.offset = 0, 20            
down.bounce.yaccel = .3           
down.bounce.groundlevel = 12         
down.friction.threshold = .05    

[Quotes]
victory1 = "You must defeat Tu Shou to stand a chance."
victory2 = "You need a lot of training. Come back in ten years."
victory3 = "You look familiar. Did I see you on TV?"
victory4 = "Your moves are too predictable. You want to learn Kung Fu Palm? It's not for novices."
victory5 = "That was a good workout."
victory6 = "I want to challenge more skilled fighters."
victory7 = "What do you mean my girlfriend is in another temple?"

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).


 ;---------------------------------------------------------------------------
; Walk
[Statedef 20]
type    = S
physics = S
sprpriority = 0

[State 20, 1]
type = VelSet
trigger1 = command = "holdfwd"
x = const(velocity.walk.fwd.x)*cond(Map(BUCKX2)>0,1.25,1)

[State 20, 2]
type = VelSet
trigger1 = command = "holdback"
x = const(velocity.walk.back.x)*cond(Map(BUCKX2)>0,1.25,1)

[State 20, 3]
type = ChangeAnim
triggerall = vel x > 0
trigger1 = Anim != 20 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0
value = 20

[State 20, 4]
type = ChangeAnim
triggerall = vel x < 0
trigger1 = Anim != 21 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0
value = 21
;---------------------------------------------------------------------------
; Run forward
[Statedef 100]
type    = S
physics = S
anim = 100
sprpriority = 1
ctrl = 1

[State 100, 1]
type = VelSet
trigger1 = 1
x = const(velocity.run.fwd.x)*cond(Map(BUCKX2)>0,1.25,1)

[State 100, 2] ;Prevent run from canceling into walk
type = AssertSpecial
trigger1 = 1
flag = NoWalk

[State 100, 3] ;Prevent from turning
type = AssertSpecial
trigger1 = 1
flag = NoAutoTurn

[State 100, 4]
type = ChangeState
trigger1 = command != "holdfwd"
value = 101

;---------------------------------------------------------------------------
; Back Dash
[Statedef 105]
type = S
movetype = I
physics = S
ctrl = 0
anim = 105

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nowalk

[State 0, VelAdd]
type = VelSet
trigger1 = animelem = 1
x = -6

[State 0, ChangeState]
type = ChangeState
trigger1 = animtime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Forward Dash Walk
[Statedef 101]
type = S
movetype = I
physics = S
ctrl = 1
anim = 101

[State 0, ChangeState]
type = ChangeState
trigger1 = animtime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; Forward Air Dash
[Statedef 160]
type = A
movetype = I
physics = A
ctrl = 0
anim = 160
velset = 0,0

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = time <= 20
flag = noairguard

[State -2, Airdash Limiter]
type = mapadd
trigger1 = time = 0
value = -1
map = "DJ"

[State 0, VelSet]
type = VelSet
trigger1 = 1
x = 5.25

[State 0, StateTypeSet]
type = StateTypeSet
trigger1 = time = 16
statetype = A       ;S,A,C,L
movetype = I        ;I,A,H
physics = A         ;A,C,S,N

[State 0, VelMul]
type = VelMul
trigger1 = time > 11
x = .95

[State -2, AirDash Physics]
type = mapset
trigger1 = time = 0
value = 16
map = "ADPhysics"
[State -2, AirDash Physics]
type = mapset
trigger1 = time = 0
value = 1
map = "AirDashing"

[State 0, CtrlSet]
type = CtrlSet
trigger1 = time = 7
value = 1
;---------------------------------------------------------------------------
; Back Air Dash
[Statedef 161]
type = A
movetype = I
physics = A
ctrl = 0
anim = 161
velset = 0,0

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = time <= 20
flag = noairguard

[State -2, Airdash Limiter]
type = mapadd
trigger1 = time = 0
value = -1
map = "DJ"

[State 0, VelSet]
type = VelSet
trigger1 = 1
x = -5.25

[State 0, StateTypeSet]
type = StateTypeSet
trigger1 = time = 15
statetype = A       ;S,A,C,L
movetype = I        ;I,A,H
physics = A         ;A,C,S,N

[State 0, VelMul]
type = VelMul
trigger1 = time > 15
x = .98

[State -2, AirDash Physics]
type = mapset
trigger1 = time = 0
value = 17
map = "ADPhysics"
[State -2, AirDash Physics]
type = mapset
trigger1 = time = 0
value = 1
map = "AirDashing"


[State 0, CtrlSet]
type = CtrlSet
trigger1 = time = 7
value = 1
;---------------------------------------------------------------------------
; Lose by Time Over
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1 - Bow
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Introduction
[Statedef 191]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0

; You can delete the following two controllers if you're building your own
; character using KFM. These are the wood pieces that KFM kicks.
[State 191, Wood 1]
type = Explod
trigger1 = RoundState != 0
persistent = 0
anim = 191
postype = p1
pos = 260, -90
velocity = -4.2, -7
accel = 0, .32
removetime = 48

[State 191, Wood 2]
type = Explod
trigger1 = AnimElemTime(7) = 1
anim = 192
postype = p1
pos = 60, -70
velocity = 2, -4
accel = 0, .32
removetime = 35

; You can delete the following two controllers if you're building your own
; character using KFM. These play back the sounds of the wood block being
; broken.
[State 191, Snd 1]
type = PlaySnd
trigger1 = AnimElem = 7
value = F5,2
volume = -40

[State 191, Snd 2]
type = PlaySnd
trigger1 = AnimElemTime(7) = 3
value = F5,3
volume = -80
;---------------------------------------------------------------------------
; GGs Go Next
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------
[Statedef -2]

[State 0, DisplayToClipboard]
type = DisplayToClipboard
trigger1 = 1
text = "DamageScaling = %.3f, HitstunScaling = %.3f, qcfD = %.2f"
params = Map(DamageScaling),Map(HitstunScaling),Map(qcfD)

;---------REDUCE MECHANIC
[State -2, Reduce]
type = mapset
trigger1 = enemy,movehit=1
value = 0
map = "Reduce"
[State -2, Reduce]
type = mapset
trigger1 = enemy,movehit=1
value = 0
map = "ReduceLockout"

[State -2, Reduce Set]
type = mapset
triggerall = Map(ReduceLockout)=0
trigger1 = movetype = H && command = "c"
value = 5
map = "Reduce"

[State -2, Reduce Set]
type = mapset
trigger1 = movetype = H && command = "c"
value = 12
map = "ReduceLockout"

[State -2, Reduce]
type = mapadd
trigger1 = Map(Reduce)>0
value = -1
map = "Reduce"
[State -2, Reduce]
type = mapadd
trigger1 = Map(ReduceLockout)>0
value = -1
map = "ReduceLockout"

[State 0, DefenceMulSet]
type = DefenceMulSet
trigger1 = Map(Reduce)>0
value = .8
ignorehitpause = 1
[State 0, DefenceMulSet]
type = DefenceMulSet
trigger1 = Map(Reduce)=0
value = 1
ignorehitpause = 1

[State -2, Damage Scaling Reset]
type = mapset
trigger1 = combocount=0 || enemy,movetype != H
value = 1
map = "DamageScaling"
[State -2, Hitstun Scaling Reset]
type = mapset
trigger1 = combocount=0 || enemy,movetype != H
value = 0
map = "HitstunScaling"

;-------COUNTER HITS----------

[State 0, Zoom]
type = zoom
triggerall = enemy,stateno != 666999 && enemy,prevstateno != 666999
triggerall = movetype != H
triggerall = stateno != 200 && stateno != 400
trigger1= Movecountered 
scale = 1.25
lag = .25
stagebound = 1
camerabound = 1
pos = pos x,-20
ignorehitpause=1
[State 0, EnvShake]
type = EnvShake
triggerall = stateno != 200 && stateno != 400
trigger1= Movecountered && time = 0
time = 10
freq = 60
ampl = -4
phase = 90

[State -2, CounterHit Reset]
type = mapset
trigger1 = enemy,movetype != A
value = 0
map = "CounterHit"
[State -2, CounterHit Reset]
type = mapset
trigger1 = enemy,movetype = A
value = 1
map = "CounterHit"

;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------
[Statedef -3]

;---------------------------------------------------------------------------
; CHARACTER SPECIFIC
;---------------------------------------------------------------------------

[State -2, Install Timer]
type = mapadd
trigger1 = Map(BUCKX2)>0
value = -1
map = "BUCKX2"

;---------------------------------------------------------------------------
; UNIVERSAL
;---------------------------------------------------------------------------

[State -2, DJ buffer]
type = mapadd
trigger1 = command = "holdup" && Map(DJAccess)=1
value = 1
map = "DJCount"
[State -2, DJ buffer]
type = mapset
trigger1 = command = "holdup" && Map(DJCount)=4
value = 0
map = "DJAccess"
[State -2, DJ buffer]
type = mapset
trigger1 = command != "holdup"
value = 1
map = "DJAccess"
[State -2, DJ buffer]
type = mapset
trigger1 = command != "holdup"
value = 0
map = "DJCount"


[State -2, AirDash Physics]
type = mapadd
trigger1 = movetype = H || statetype != A
value = 0
map = "ADPhysics"
[State -2, AirDash Physics]
type = mapadd
trigger1 = Map(ADPhysics)>0
value = -1
map = "ADPhysics"
[State -2, AirDash Physics]
type = mapset
trigger1 = statetype != A
value = 0
map = "AirDashing"

[State Throw Tech]
type = mapset
trigger1 = ctrl
map = "CanTT"
value = 1
[State Throw Tech]
type = mapset
trigger1 = !ctrl
map = "CanTT"
value = 0

[State 0, Explod]
type = Explod
trigger1 = numexplod(999)<1
anim = F999
ID = 999
pos = 0,0
postype = P1  ;P2, Front, Back, Left, Right
facing = 1
vfacing = 1
bindtime = 1
removetime = -2
supermovetime = 99999
pausemovetime = 99999
scale = 1,1
sprpriority = -7
ownpal = 1
removeongethit = 0

;================================================================
;Generic Limiters
;================================================================
[State -2, Move Limit Reset]
type = mapset
trigger1 = Statetype != A
value = 1
map = "DJ"
[State -2, Move Limit Reset]
type = mapset
trigger1 = combocount=0
value = 0
map = "GroundBounce"
[State -2, Move Limit Reset]
type = mapset
trigger1 = combocount=0
value = 0
map = "WallBounce"
[State -2, Move Limit Reset]
type = mapset
trigger1 = combocount=0
value = 0
map = "Tumble"

;================================================================
;Repeat Damage Scaling
;================================================================
[State -2, 2C Reset]
type = mapset
trigger1 = enemy,movetype != H
value = 0
map = "Launcher"
[State -2, 2D>D Reset]
type = mapset
trigger1 = enemy,movetype != H
value = 0
map = "crD"
[State -2, Gun Reset]
type = mapset
trigger1 = enemy,movetype != H
value = 0
map = "qcfD"
[State -2, Gun Reset]
type = mapset
trigger1 = enemy,movetype != H
value = 0
map = "qcbD"
[State -2, Gun Reset]
type = mapset
trigger1 = enemy,movetype != H
value = 0
map = "stanceA"


;This controller plays a sound everytime KFM lands from a jump, or
;from his back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
